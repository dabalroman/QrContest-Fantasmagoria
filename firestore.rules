rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        function isUserAdmin() {
            return request.auth.uid != null
                && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
        }

        match /users/{userId} {
            allow read: if request.auth != null && request.auth.uid == userId;

            allow create: if request.auth.uid == userId
                && !exists(/databases/$(database)/documents/users/$(userId))
                && request.resource.data.uid == userId
                && request.resource.data.score == 0
                && request.resource.data.amountOfCollectedCards == 0
                && request.resource.data.role == 'user';

            allow update: if request.auth.uid == userId
                && request.resource.data.uid == userId
                && request.resource.data.score == resource.data.score
                && request.resource.data.role == resource.data.role
                && request.resource.data.username == resource.data.username;

            allow delete: if false;

            match /collectedCards/{cardId} {
                allow read: if request.auth != null
                    && request.auth.uid == userId;

                allow write: if false;
            }
        }

        match /users-usernames/{username} {
            allow read: if request.auth != null;

            allow create: if request.resource.data.uid == request.auth.uid
                && !exists(/databases/$(database)/documents/users-usernames/$(username));

            allow update, delete: if false;
        }

        match /cards/{cardId} {
            allow read, create, update: if request.auth != null
                && isUserAdmin();

            allow update, delete: if false;
        }

        match /cardSets/{cardSet} {
            allow read: if request.auth != null;

            allow create, update: if request.auth != null && isUserAdmin();

            allow delete: if false;
        }

        match /ranking/ranking {
            allow read: if request.auth != null;

            allow write: if false;
        }

        //   function immutableFields(documentType) {
        //     let fieldConfigs = {
        //       'user': ['role'],
        //       'card': [],
        //       'card-user': []
        //     };

        //     return fieldConfigs[documentType];
        //   }

        //   function immutableUserCheck() {
        //   	return request.resource.data['role'] != resource.data['role'];
        //   }

        //     match /cards/{cardId} {
        //       allow read, write: if immutableSecurityCheck('card') &&
        //                          allowedFieldsCheck('card', request.resource.data);
        //     }

        //     match /card-user/{relationId} {
        //       allow read, write: if immutableSecurityCheck('card-user') &&
        //                          allowedFieldsCheck('card-user', request.resource.data);
        //     }
    }
}
